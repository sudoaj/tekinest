{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AuthActions } from '../../store/auth/actions';\nexport let DashboardComponent = class DashboardComponent {\n  constructor(ngRedux, http, db, authentication, route) {\n    this.ngRedux = ngRedux;\n    this.http = http;\n    this.db = db;\n    this.authentication = authentication;\n    this.route = route;\n    this.action = new AuthActions(ngRedux, http, db, authentication);\n    this.subscription = ngRedux.select('auth').subscribe(item => this.user = item);\n  }\n  ngOnInit() {\n    if (this.user.user) this.action.getMembers(this.user.user.companyId);else this.route.navigate(['newsec/login']);\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["Component","AuthActions","DashboardComponent","constructor","ngRedux","http","db","authentication","route","action","subscription","select","subscribe","item","user","ngOnInit","getMembers","companyId","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/aj/source/repos/tekinest/src/app/newsec/container/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { IAppState } from '../../../store/index'\nimport { HttpClient } from '@angular/common/http'\nimport { NgRedux } from '@angular-redux/store'\nimport { AngularFireDatabase } from 'angularfire2/database'\nimport { AngularFireAuth } from 'angularfire2/auth'\nimport { AuthActions } from '../../store/auth/actions'\nimport { Router } from '@angular/router'\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  user; subscription; action\n\n  constructor(private ngRedux: NgRedux<IAppState>, \n    private http: HttpClient, \n    private db: AngularFireDatabase,\n    private authentication: AngularFireAuth, private route: Router) {\n    this.action = new AuthActions(ngRedux, http, db, authentication)\n    this.subscription = ngRedux.select('auth').subscribe(item => this.user = item)\n  }\n\n  ngOnInit() {\n    if (this.user.user) this.action.getMembers(this.user.user.companyId)\n    else this.route.navigate(['newsec/login'])\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAMjD,SAASC,WAAW,QAAQ,0BAA0B;AAS/C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAI7BC,YAAoBC,OAA2B,EACrCC,IAAgB,EAChBC,EAAuB,EACvBC,cAA+B,EAAUC,KAAa;IAH5C,KAAAJ,OAAO,GAAPA,OAAO;IACjB,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,cAAc,GAAdA,cAAc;IAA2B,KAAAC,KAAK,GAALA,KAAK;IACtD,IAAI,CAACC,MAAM,GAAG,IAAIR,WAAW,CAACG,OAAO,EAAEC,IAAI,EAAEC,EAAE,EAAEC,cAAc,CAAC;IAChE,IAAI,CAACG,YAAY,GAAGN,OAAO,CAACO,MAAM,CAAC,MAAM,CAAC,CAACC,SAAS,CAACC,IAAI,IAAI,IAAI,CAACC,IAAI,GAAGD,IAAI,CAAC;EAChF;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACD,IAAI,CAACA,IAAI,EAAE,IAAI,CAACL,MAAM,CAACO,UAAU,CAAC,IAAI,CAACF,IAAI,CAACA,IAAI,CAACG,SAAS,CAAC,MAC/D,IAAI,CAACT,KAAK,CAACU,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EAC5C;CAED;AAjBYhB,kBAAkB,GAAAiB,UAAA,EAL9BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWpB,kBAAkB,CAiB9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}