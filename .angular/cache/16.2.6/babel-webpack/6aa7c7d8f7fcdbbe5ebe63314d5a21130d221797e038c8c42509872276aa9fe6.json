{"ast":null,"code":"import _asyncToGenerator from \"/Users/aj/source/repos/tekinest/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AuthActions } from '../../../store/auth/actions';\nexport let MembersComponent = class MembersComponent {\n  constructor(notifierService, ngRedux, http, db, authentication) {\n    var _this = this;\n    this.ngRedux = ngRedux;\n    this.http = http;\n    this.db = db;\n    this.authentication = authentication;\n    this.fileToUpload = null;\n    this.status = '';\n    this.errorMessage = 'Some first names or surnnames are empty, Please make sure everything is filled in correctly';\n    this.handleFile = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (files) {\n        _this.status = 'UPLOADING FILE';\n        _this.fileToUpload = files.item(0);\n        const reader = new FileReader();\n        reader.readAsText(_this.fileToUpload);\n        reader.onload = /*#__PURE__*/_asyncToGenerator(function* () {\n          const text = reader.result;\n          const members = csvJSON(text);\n          _this.validateMembers(members);\n        });\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.validateMembers = members => {\n      this.status = 'VALIDATING DATA';\n      let invalidName = false,\n        invalidEmail = '',\n        invalidSurname = false,\n        errorText = '';\n      members.map(member => {\n        if (!member.firstName || member.firstName == '') invalidName = true;\n        if (!member.surname || member.surname == '') invalidSurname = true;\n        if (!validateEmail(member.email)) invalidEmail = invalidEmail + `${member.email} `;\n      });\n      if (invalidEmail != '') errorText = `This emails are invalid (${invalidEmail}).`;\n      if (invalidName || invalidSurname) errorText = errorText + ` ${this.errorMessage}`;\n      if (errorText != '') {\n        this.status = '';\n        this.notifier.notify('error', errorText);\n      } else this.addMembers(members);\n    };\n    this.addMembers = members => {\n      this.status = 'ADDING MEMBERS';\n      if (this.user.user) {\n        this.action.addMembers(this.user.user.name, this.user.user.companyId, members, res => {\n          this.status = 'SUCCESSFUL';\n          this.action.getMembers(this.user.user.companyId);\n        });\n      }\n    };\n    this.resetStatus = () => {\n      this.status = '';\n    };\n    this.notifier = notifierService;\n    this.subscription = ngRedux.select('auth').subscribe(item => this.user = item);\n    this.action = new AuthActions(ngRedux, http, db, authentication);\n  }\n  ngOnInit() {}\n};\nMembersComponent = __decorate([Component({\n  selector: 'app-members',\n  templateUrl: './members.component.html',\n  styleUrls: ['./members.component.css']\n})], MembersComponent);\nconst csvJSON = csv => {\n  let lines = csv.split(\"\\n\");\n  let result = [];\n  let headers = lines[0].split(\",\");\n  for (var i = 1; i < lines.length; i++) {\n    let obj = {};\n    let currentline = lines[i].split(\",\");\n    for (var j = 0; j < headers.length; j++) {\n      obj[headers[j].trim()] = currentline[j].trim();\n    }\n    result.push(obj);\n  }\n  return result; //JavaScript object\n  // return JSON.stringify(result); //JSON\n};\n\nconst validateEmail = mail => {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n    return true;\n  } else {\n    return false;\n  }\n};","map":{"version":3,"names":["Component","AuthActions","MembersComponent","constructor","notifierService","ngRedux","http","db","authentication","_this","fileToUpload","status","errorMessage","handleFile","_ref","_asyncToGenerator","files","item","reader","FileReader","readAsText","onload","text","result","members","csvJSON","validateMembers","_x","apply","arguments","invalidName","invalidEmail","invalidSurname","errorText","map","member","firstName","surname","validateEmail","email","notifier","notify","addMembers","user","action","name","companyId","res","getMembers","resetStatus","subscription","select","subscribe","ngOnInit","__decorate","selector","templateUrl","styleUrls","csv","lines","split","headers","i","length","obj","currentline","j","trim","push","mail","test"],"sources":["/Users/aj/source/repos/tekinest/src/app/newsec/container/dashboard/members/members.component.ts"],"sourcesContent":["import { Component, OnInit, } from '@angular/core';\nimport { IAppState } from '../../../../store/index'\nimport { HttpClient } from '@angular/common/http'\nimport { NotifierService } from 'angular-notifier'\nimport { NgRedux } from '@angular-redux/store'\nimport { AngularFireDatabase } from 'angularfire2/database'\nimport { AngularFireAuth } from 'angularfire2/auth'\nimport { AuthActions } from '../../../store/auth/actions'\n\n@Component({\n  selector: 'app-members',\n  templateUrl: './members.component.html',\n  styleUrls: ['./members.component.css']\n})\n\n\nexport class MembersComponent implements OnInit {\n\n  private readonly notifier: NotifierService;\n  user; subscription; action\n  fileToUpload: File = null;\n  status: string = ''\n  errorMessage = 'Some first names or surnnames are empty, Please make sure everything is filled in correctly'\n\n  constructor(notifierService: NotifierService, \n    private ngRedux: NgRedux<IAppState>, \n    private http: HttpClient, \n    private db: AngularFireDatabase,\n    private authentication: AngularFireAuth) {\n    this.notifier = notifierService;\n    this.subscription = ngRedux.select('auth').subscribe(item => this.user = item)\n    this.action = new AuthActions(ngRedux, http, db, authentication)\n  }\n\n  ngOnInit() {}\n\n  handleFile = async (files: FileList) => {\n    this.status = 'UPLOADING FILE'\n    this.fileToUpload = files.item(0);\n    const reader = new FileReader();\n    reader.readAsText(this.fileToUpload);\n    reader.onload = async () => {\n      const text = reader.result;\n      const members = csvJSON(text);\n      this.validateMembers(members)\n    };\n  }\n\n  validateMembers = members => {\n    this.status = 'VALIDATING DATA'\n    let invalidName = false, invalidEmail = '', invalidSurname = false, errorText = ''\n    members.map(member => {\n      if (!member.firstName || member.firstName == '') invalidName = true\n      if (!member.surname || member.surname == '') invalidSurname = true\n      if (!validateEmail(member.email)) invalidEmail = invalidEmail + `${member.email} `\n    })\n    if (invalidEmail != '') errorText = `This emails are invalid (${invalidEmail}).`\n    if (invalidName || invalidSurname) errorText = errorText + ` ${this.errorMessage}`\n    if (errorText != '') {\n      this.status = ''\n      this.notifier.notify('error', errorText);\n    } else this.addMembers(members)\n  }\n\n  addMembers = members => {\n    this.status = 'ADDING MEMBERS'\n    if (this.user.user) {\n      this.action.addMembers(this.user.user.name, this.user.user.companyId, members, res => {\n        this.status = 'SUCCESSFUL'\n        this.action.getMembers(this.user.user.companyId)\n      })\n    }\n  }\n\n  resetStatus = () => {\n    this.status = '';\n  }\n}\n\n\n\n\nconst csvJSON = csv => {\n  let lines = csv.split(\"\\n\");\n  let result = [];\n  let headers = lines[0].split(\",\");\n\n  for(var i = 1; i < lines.length; i++) {\n    let obj = {};\n    let currentline = lines[i].split(\",\");\n      for(var j = 0; j < headers.length; j++) {\n        obj[headers[j].trim()] = currentline[j].trim();\n      }\n    result.push(obj);\n  } \n  return result; //JavaScript object\n  // return JSON.stringify(result); //JSON\n}\n\nconst validateEmail = mail => {\n if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {return true}\n else {return false}\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}