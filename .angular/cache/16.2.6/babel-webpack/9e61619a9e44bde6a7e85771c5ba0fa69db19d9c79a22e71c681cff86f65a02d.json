{"ast":null,"code":"import _asyncToGenerator from \"/Users/aj/source/repos/tekinest/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport * as actionTypes from './types';\nexport let AuthActions = class AuthActions {\n  constructor(ngRedux, http, db, auth) {\n    var _this = this;\n    this.ngRedux = ngRedux;\n    this.http = http;\n    this.db = db;\n    this.auth = auth;\n    this.defaultPassword = 'P@ssw1rd';\n    this.login = (data, callback) => {\n      return this.auth.auth.signInWithEmailAndPassword(data.email, data.password).then(res => {\n        return this.db.database.ref(`companies/${res.user.uid}/profile`).once('value').then(val => {\n          this.ngRedux.dispatch({\n            type: actionTypes.STORE_USER,\n            payload: val.val()\n          });\n          callback('done');\n        }).catch(error => console.log(error));\n      }).catch(error => {\n        console.log(error);\n        callback(error.message);\n      });\n    };\n    this.getMembers = id => {\n      return this.db.database.ref(`companies/${id}/members`).once('value').then(res => {\n        let members = [];\n        res.forEach(item => {\n          members = [...members, item.val()];\n        });\n        this.ngRedux.dispatch({\n          type: actionTypes.STORE_MEMBERS,\n          payload: members\n        });\n      }).catch(error => console.log(error));\n    };\n    this.sendMail = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (member) {\n        return _this.http.post('https://newsecapp.herokuapp.com/send', member).subscribe(res => {});\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.addMembers = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (companyName, companyId, members, callback) {\n        for (const member of members) {\n          yield _this.auth.auth.createUserWithEmailAndPassword(member.email, _this.defaultPassword).then( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator(function* (user) {\n              yield _this.auth.auth.currentUser.updateProfile({\n                displayName: companyId\n              }).then( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator(function* (res) {\n                  yield _this.db.database.ref(`companies/${companyId}/members/${user.user.uid}`).set({\n                    memberId: user.user.uid,\n                    firstName: member.firstName.trim(),\n                    surname: member.surname.trim(),\n                    email: member.email.trim(),\n                    password: _this.defaultPassword,\n                    companyId: companyId,\n                    created: new Date().toString(),\n                    timestamp: +new Date()\n                  }).then( /*#__PURE__*/function () {\n                    var _ref5 = _asyncToGenerator(function* (res) {\n                      let newMember = {\n                        ...member,\n                        password: _this.defaultPassword,\n                        companyName,\n                        companyId\n                      };\n                      yield _this.sendMail(newMember);\n                    });\n                    return function (_x8) {\n                      return _ref5.apply(this, arguments);\n                    };\n                  }()).catch(error => console.log(error));\n                });\n                return function (_x7) {\n                  return _ref4.apply(this, arguments);\n                };\n              }()).catch(error => console.log(error));\n            });\n            return function (_x6) {\n              return _ref3.apply(this, arguments);\n            };\n          }()).catch(error => console.log(error));\n        }\n        callback('done');\n      });\n      return function (_x2, _x3, _x4, _x5) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n};\nAuthActions = __decorate([Injectable()], AuthActions);","map":{"version":3,"names":["Injectable","actionTypes","AuthActions","constructor","ngRedux","http","db","auth","_this","defaultPassword","login","data","callback","signInWithEmailAndPassword","email","password","then","res","database","ref","user","uid","once","val","dispatch","type","STORE_USER","payload","catch","error","console","log","message","getMembers","id","members","forEach","item","STORE_MEMBERS","sendMail","_ref","_asyncToGenerator","member","post","subscribe","_x","apply","arguments","addMembers","_ref2","companyName","companyId","createUserWithEmailAndPassword","_ref3","currentUser","updateProfile","displayName","_ref4","set","memberId","firstName","trim","surname","created","Date","toString","timestamp","_ref5","newMember","_x8","_x7","_x6","_x2","_x3","_x4","_x5","__decorate"],"sources":["/Users/aj/source/repos/tekinest/src/app/newsec/store/auth/actions.ts"],"sourcesContent":["import { Component, OnInit, Injectable } from '@angular/core';\nimport * as actionTypes from './types'\nimport { NgRedux } from '@angular-redux/store'\nimport { IAppState } from '../../../store/index'\nimport { HttpClient } from '@angular/common/http'\nimport { AngularFireDatabase } from 'angularfire2/database'\nimport { AngularFireAuth } from 'angularfire2/auth'\n\n\n@Injectable()\nexport class AuthActions {\n\n  defaultPassword = 'P@ssw1rd'\n\n  constructor(private ngRedux: NgRedux<IAppState>, \n    private http: HttpClient, private db: AngularFireDatabase, private auth: AngularFireAuth) {}\n\n  login = (data, callback) => {\n    return this.auth.auth.signInWithEmailAndPassword(data.email, data.password).then(res => {\n      return this.db.database.ref(`companies/${res.user.uid}/profile`)\n      .once('value')\n      .then(val => {\n        this.ngRedux.dispatch({\n          type: actionTypes.STORE_USER,\n          payload: val.val()\n        }); callback('done')\n      }).catch(error => console.log(error))\n    }).catch(error => {console.log(error); callback(error.message)})\n  }\n\n  getMembers = id => {\n    return this.db.database.ref(`companies/${id}/members`).once('value')\n    .then(res => {\n      let members = []\n      res.forEach(item => {members = [...members, item.val()]})\n      this.ngRedux.dispatch({\n        type: actionTypes.STORE_MEMBERS,\n        payload: members\n      })\n    }).catch(error => console.log(error))\n  }\n\n  sendMail = async member => {\n    return this.http.post('https://newsecapp.herokuapp.com/send', member).subscribe(res => {})\n  }\n\n  addMembers = async (companyName, companyId, members, callback) => {\n    for (const member of members) {\n      await this.auth.auth.createUserWithEmailAndPassword(member.email, this.defaultPassword).then(async user => {\n        await this.auth.auth.currentUser.updateProfile({displayName: companyId}).then(async res => {\n          await this.db.database.ref(`companies/${companyId}/members/${user.user.uid}`).set({\n            memberId: user.user.uid,\n            firstName: member.firstName.trim(),\n            surname: member.surname.trim(),\n            email: member.email.trim(),\n            password: this.defaultPassword,\n            companyId: companyId,\n            created: new Date().toString(),\n            timestamp: + new Date()\n          }).then(async res => {\n            let newMember = {...member, password: this.defaultPassword, companyName, companyId}\n            await this.sendMail(newMember)\n          }).catch(error => console.log(error))\n        }).catch(error => console.log(error))\n      }).catch(error => console.log(error))\n    }\n    callback('done')\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}